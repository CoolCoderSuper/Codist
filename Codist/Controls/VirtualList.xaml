<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:Codist.Controls;assembly=Codist"
	xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">
	<Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Margin" Value="0,4,0,3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource VsBrush.CommandBarMenuSeparator}">
						<ContentPresenter Name="Header" Content="{TemplateBinding Tag}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="{x:Null}">
							<Setter TargetName="Header" Property="Visibility" Value="Collapsed"/>
							<Setter Property="Height" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type c:VirtualList}" TargetType="{x:Type c:VirtualList}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Cursor" Value="Arrow"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c:VirtualList}">
					<Border BorderThickness="1,1,1,1" CornerRadius="0,0,5,5" x:Name="Border" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" UseLayoutRounding="True">
						<StackPanel>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto" SharedSizeGroup="HeaderButtons"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter x:Name="Header" Content="{TemplateBinding Header}" Margin="0,3,0,3"/>
								<ContentPresenter x:Name="HeaderButtons" Content="{TemplateBinding HeaderButtons}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,2,0,0"/>
							</Grid>
							<ScrollViewer x:Name="PART_Scroller" Margin="3" Focusable="False" MaxHeight="{TemplateBinding ItemsControlMaxHeight}" VerticalScrollBarVisibility="Auto">
								<VirtualizingStackPanel IsItemsHost="True" VirtualizingPanel.CacheLength="2,3" VirtualizingPanel.CacheLengthUnit="Page" VirtualizationMode="Recycling"/>
							</ScrollViewer>
							<ContentPresenter x:Name="PART_Footer" Content="{TemplateBinding Footer}" Margin="0,3,0,3"/>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Footer" Value="{x:Null}">
							<Setter TargetName="PART_Footer" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="ListItemTemplate" DataType="{x:Type c:ListItem}">
		<Border Name="Border" BorderThickness="1" Padding="1" HorizontalAlignment="Stretch" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Width="18" Height="18" Margin="0,0,8,0" VerticalAlignment="Center" Content="{Binding Path=Icon}"/>
				<Border x:Name="Check" Width="18" Height="18" Visibility="Collapsed" Margin="6,0,6,0" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderThickness="1" BorderBrush="#5082a4">
					<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="#5082a4" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0"/>
				</Border>
				<ContentPresenter x:Name="HeaderHost" MaxWidth="500" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding Path=Content}" RecognizesAccessKey="False"/>
				<TextBlock x:Name="HintText" Grid.Column="2" Text="{Binding Path=Hint}" Margin="5,0,0,0" Height="{Binding ElementName=HeaderHost,Path=ActualHeight}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{DynamicResource VsBrush.GrayText}" MaxWidth="200" TextTrimming="CharacterEllipsis"/>
			</Grid>
		</Border>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ImageId}" Value="2099">
				<!-- for regions -->
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.PanelTitleBarBrushKey}}"/>
				<Setter TargetName="HeaderHost" Property="TextBlock.FontWeight" Value="Bold"/>
			</DataTrigger>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
			</Trigger>
			<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
			</DataTrigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	<Style TargetType="ListBoxItem">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Cursor" Value="Arrow"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<ContentPresenter
						ContentTemplate="{StaticResource ListItemTemplate}"
						ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
						HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="False" Height="22" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
