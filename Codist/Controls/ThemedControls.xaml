<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:Codist.Controls;assembly=Codist"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">
	<Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:EnvironmentColors.ToolTipTextBrushKey}}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="FontWeight" Value="Regular"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolTip}">
					<Border x:Name="Bd" BorderThickness="1" BorderBrush="{DynamicResource VsBrush.DropDownBorder}" Background="{DynamicResource VsBrush.DropDownBackground}" Padding="{TemplateBinding Padding}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Content" Value="{x:Null}">
							<Setter TargetName="Bd" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="Content" Value="{x:Static sys:String.Empty}">
							<Setter TargetName="Bd" Property="Visibility" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonHoverBrushKey}}"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonBorderHoverBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type c:ThemedToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c:ThemedToggleButton}">
					<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonBorderBrushKey}}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource VsBrush.FileTabSelectedGradientTop}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type c:ThemedButton}" TargetType="{x:Type c:ThemedButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c:ThemedButton}">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type c:ThemedImageButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1,2,3,2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c:ThemedImageButton}">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.FileTabSelectedGradientTop}"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.FileTabSelectedGradientTop}"/>
						</Trigger>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarSelectedBrushKey}}"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarSelectedBorderBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
